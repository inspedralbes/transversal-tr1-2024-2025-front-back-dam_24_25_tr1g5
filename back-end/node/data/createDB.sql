CREATE TABLE IF NOT EXISTS typesusers (
  id INT(11) NOT NULL AUTO_INCREMENT PRIMARY KEY, 
  name VARCHAR(100) DEFAULT NULL
);

CREATE TABLE IF NOT EXISTS users ( 
  id INT(11) NOT NULL AUTO_INCREMENT PRIMARY KEY,
  typeUserId INT(11)  DEFAULT 1,
  email VARCHAR(255) NOT NULL,
  password VARCHAR(255) NOT NULL, 
  firstName VARCHAR(100) DEFAULT NULL, 
  lastName VARCHAR(100) DEFAULT NULL, 
  paymentMethod TINYINT(1) DEFAULT NULL,
  FOREIGN KEY (typeUserId) REFERENCES typesusers (id) ON DELETE SET NULL
);

CREATE TABLE IF NOT EXISTS categories (
  id INT(11) NOT NULL AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(100) DEFAULT NULL
);

CREATE TABLE IF NOT EXISTS cards (
    id INT(11) NOT NULL AUTO_INCREMENT PRIMARY KEY,
    userId INT(11) DEFAULT NULL,
    cardName VARCHAR(100) DEFAULT NULL,
    expirationDate DATE DEFAULT NULL,
    cvc INT(11) DEFAULT NULL,
    cardNumber VARCHAR(20) DEFAULT NULL,
    FOREIGN KEY (userId) REFERENCES users (id) ON DELETE SET NULL
);

CREATE TABLE IF NOT EXISTS products (
    id INT(11) NOT NULL AUTO_INCREMENT PRIMARY KEY,
    categoryId INT(11) DEFAULT NULL,
    name VARCHAR(100) DEFAULT NULL,
    description TEXT DEFAULT NULL,
    size VARCHAR(50) DEFAULT NULL,
    price DECIMAL(10,2) DEFAULT NULL,
    imagePath VARCHAR(255) DEFAULT NULL,
    colors VARCHAR(255) DEFAULT NULL,
    stock INT(11) DEFAULT NULL,
    activated TINYINT(1) DEFAULT NULL,
    FOREIGN KEY (categoryId) REFERENCES categories (id) ON DELETE SET NULL
);

CREATE TABLE IF NOT EXISTS orders (
    id INT(11) NOT NULL AUTO_INCREMENT PRIMARY KEY,
    total DECIMAL(10,2) DEFAULT NULL,
    userId INT(11) DEFAULT NULL,
    date DATE DEFAULT NULL,
    FOREIGN KEY (userId) REFERENCES users (id) ON DELETE SET NULL
);

CREATE TABLE IF NOT EXISTS orderlines (
    id INT(11) NOT NULL AUTO_INCREMENT PRIMARY KEY,
    orderID INT(11) DEFAULT NULL,
    productId INT(11) DEFAULT NULL,
    productPrice DECIMAL(10,2) DEFAULT NULL,
    date DATE DEFAULT NULL,
    FOREIGN KEY (orderID) REFERENCES orders (id) ON DELETE CASCADE,
    FOREIGN KEY (productId) REFERENCES products (id) ON DELETE CASCADE
);